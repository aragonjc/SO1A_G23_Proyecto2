apiVersion: v1
kind: Namespace
metadata:
  name: project
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dummy
  name: dummy
  namespace: project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dummy
  template:
    metadata:
      labels:
        app: dummy
    spec:
      containers:
      - image: czdev/blue
        name: dummy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grpc
  name: grpc
  namespace: project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grpc
  template:
    metadata:
      labels:
        app: grpc
    spec:
      containers:
      - image: alerod96/grpcclient:grpc
        name: grpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: servergrpc
  name: servergrpc
  namespace: project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: servergrpc
  template:
    metadata:
      labels:
        app: servergrpc
    spec:
      containers:
      - image: alerod96/grpc-server:grpc
        name: servergrpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redispub
  name: redispub
  namespace: project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redispub
  template:
    metadata:
      labels:
        app: redispub
    spec:
      containers:
      - image: josueperez/redispub:redispub
        name: redispub
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: subredis
  name: subredis
  namespace: project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: subredis
  template:
    metadata:
      labels:
        app: subredis
    spec:
      containers:
      - image: josueperez/redissub:redissub
        name: subredis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka
  name: kafka
  namespace: project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - image: josueperez/redispub:redispub
        name: kafka
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: subkafka
  name: subkafka
  namespace: project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: subkafka
  template:
    metadata:
      labels:
        app: subkafka
    spec:
      containers:
      - image: josueperez/redissub:redissub
        name: subkafka
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: dummy
  name: dummy
  namespace: project
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: dummy
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: grpc
  name: grpc
  namespace: project
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: grpc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: servergrpc
  name: servergrpc
  namespace: project
spec:
  ports:
  - port: 50051
    protocol: TCP
    targetPort: 50051
  selector:
    app: servergrpc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redispub
  name: redispub
  namespace: project
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: redispub
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redispub
  name: redispub
  namespace: project
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: redispub
---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
      grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
  name: dummy-ingress
  namespace: project
spec:
  rules:
    - host: dummy.proyecto2-grupo23.cf
      http:
        paths:
          - backend:
              serviceName: dummy
              servicePort: 3000
---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
      grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
    ingress.kubernetes.io/rewrite-target: /
  name: grpc-ingress
  namespace: project
spec:
  rules:
    - host: grpc.proyecto2-grupo23.cf
      http:
        paths:
          - backend:
              serviceName: grpc
              servicePort: 3000
---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
      grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
    ingress.kubernetes.io/rewrite-target: /
  name: redispub-ingress
  namespace: project
spec:
  rules:
    - host: redis.proyecto2-grupo23.cf
      http:
        paths:
          - backend:
              serviceName: redispub
              servicePort: 3000
---
apiVersion: split.smi-spec.io/v1alpha1
kind: TrafficSplit
metadata:
  name: function-split
  namespace: project
spec:
  service: dummy
  backends:
  - service: grpc
    weight: 500m
  - service: redispub
    weight: 500m